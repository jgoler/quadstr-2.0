{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/quadstr-2.0/client/src/components/chat-form/CreateChat.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createChat } from '../../actions/chat';\nimport { setAlert } from '../../actions/alert';\n\nconst CreateChat = ({\n  setAlert,\n  createChat,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    title: ''\n  });\n  const {\n    title\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createChat({\n      title\n    }, history);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), \" Return to Your Quads\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Create New Quad\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Fill Out Form Below\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"dashboard.html\",\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Chat Name\",\n    name: \"title\",\n    value: title,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Create\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n};\n\nCreateChat.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  createChat: PropTypes.func.isRequired,\n  isCompleted: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isCompleted: state.auth.isCompleted\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  createChat\n})(CreateChat);","map":{"version":3,"sources":["/Users/jackgoler/quadstr-2.0/client/src/components/chat-form/CreateChat.js"],"names":["React","Fragment","useState","Link","PropTypes","connect","createChat","setAlert","CreateChat","history","formData","setFormData","title","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","isCompleted","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createChat } from '../../actions/chat';\nimport { setAlert } from '../../actions/alert';\n\nconst CreateChat = ({ setAlert, createChat, history }) => {\n  const [formData, setFormData] = useState({\n    title: ''\n  });\n\n  const {\n    title\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createChat({ title }, history);\n  }\n\n\n\n  return (\n    <Fragment>\n      <Link to={`/profile`}>\n        <i className=\"fas fa-arrow-left\"></i> Return to Your Quads\n      </Link>\n      <h1 className=\"large text-primary\">\n        Create New Quad\n        </h1>\n      <p className=\"lead\">\n        Fill Out Form Below\n        </p>\n      <div className=\"form\" onSubmit={e => onSubmit(e)}>\n        <form action=\"dashboard.html\" className=\"form\">\n          <div className=\"form-group\">\n            <input type=\"text\" placeholder=\"Chat Name\" name='title' value={title} onChange={e => onChange(e)} />\n          </div>\n          <input type=\"submit\" value=\"Create\" className=\"btn btn-primary\" />\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nCreateChat.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  createChat: PropTypes.func.isRequired,\n  isCompleted: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isCompleted: state.auth.isCompleted\n});\n\n\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, createChat }\n)(CreateChat);"]},"metadata":{},"sourceType":"module"}