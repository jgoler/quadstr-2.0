{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/quadstr-2.0/client/src/components/profile/Confirm.js\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { confirm } from '../../actions/auth';\n\nclass Confirm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      done: false\n    };\n  }\n\n  componentDidMount() {\n    //console.log(\"test ()\");\n    let email = new URLSearchParams(this.props.location.search).get(\"email\");\n    let code = new URLSearchParams(this.props.location.search).get(\"code\");\n    this.props.confirm(email, code);\n    this.setState({\n      done: true\n    });\n  }\n\n  render() {\n    if (this.state.done) return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 33\n      }\n    });else return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }, this.props.confirmed, this.props.confirming), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"We have confirmed your account, you may now login!\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  confirm: (email, code) => dispatch(confirm(email, code))\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  confirmed: state.auth.emailConfirmed,\n  confirming: state.auth.emailConfirming\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);","map":{"version":3,"sources":["/Users/jackgoler/quadstr-2.0/client/src/components/profile/Confirm.js"],"names":["React","connect","confirm","Confirm","Component","state","done","componentDidMount","email","URLSearchParams","props","location","search","get","code","setState","render","marginTop","confirmed","confirming","mapDispatchToProps","dispatch","mapStateToProps","ownProps","auth","emailConfirmed","emailConfirming"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAIA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD4B;AAAA;;AAIpCC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIC,KAAK,GAAG,IAAIC,eAAJ,CAAoB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAxC,EAAgDC,GAAhD,CAAoD,OAApD,CAAZ;AACA,QAAIC,IAAI,GAAG,IAAIL,eAAJ,CAAoB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAAxC,EAAgDC,GAAhD,CAAoD,MAApD,CAAX;AACA,SAAKH,KAAL,CAAWR,OAAX,CAAmBM,KAAnB,EAA0BM,IAA1B;AACA,SAAKC,QAAL,CAAc;AAAET,MAAAA,IAAI,EAAE;AAAR,KAAd;AACD;;AAKDU,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKX,KAAL,CAAWC,IAAf,EAAqB,oBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,CAArB,KACK,oBACH;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKP,KAAL,CAAWQ,SADd,EAEG,KAAKR,KAAL,CAAWS,UAFd,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DALF,CADG;AAWN;;AA5BmC;;AAgCtC,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACtCnB,EAAAA,OAAO,EAAE,CAACM,KAAD,EAAQM,IAAR,KAAiBO,QAAQ,CAACnB,OAAO,CAACM,KAAD,EAAQM,IAAR,CAAR;AADI,CAAL,CAAnC;;AAIA,MAAMQ,eAAe,GAAG,CAACjB,KAAD,EAAQkB,QAAR,MAAsB;AAC5CL,EAAAA,SAAS,EAAEb,KAAK,CAACmB,IAAN,CAAWC,cADsB;AAE5CN,EAAAA,UAAU,EAAEd,KAAK,CAACmB,IAAN,CAAWE;AAFqB,CAAtB,CAAxB;;AAKA,eAAezB,OAAO,CAACqB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CjB,OAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { confirm } from '../../actions/auth';\n\n\n\nclass Confirm extends React.Component {\n  state = {\n    done: false\n  };\n  componentDidMount() {\n    //console.log(\"test ()\");\n    let email = new URLSearchParams(this.props.location.search).get(\"email\");\n    let code = new URLSearchParams(this.props.location.search).get(\"code\");\n    this.props.confirm(email, code);\n    this.setState({ done: true });\n  }\n\n\n\n\n  render() {\n    if (this.state.done) return <Redirect to=\"/login\" />;\n    else return (\n      <div style={{ marginTop: 50 }}>\n        <div>\n          {this.props.confirmed}\n          {this.props.confirming}\n        </div>\n        <div>\n          We have confirmed your account, you may now login!\n        </div>\n      </div>\n    )\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => ({\n  confirm: (email, code) => dispatch(confirm(email, code))\n})\n\nconst mapStateToProps = (state, ownProps) => ({\n  confirmed: state.auth.emailConfirmed,\n  confirming: state.auth.emailConfirming\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);\n\n"]},"metadata":{},"sourceType":"module"}