{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/Desktop/quadstr/client/src/components/profile/Chat.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getChatById } from '../../actions/profile';\n\nconst Chat = ({\n  getChatById,\n  profile: {\n    chat\n  },\n  //chats: { chat, loading },\n  match\n}) => {\n  useEffect(() => {\n    getChatById(match.params.id);\n  }, [getChatById, match.params.id]);\n  return chat ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, `${chat.title} quad`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Welcome to \", chat.title), /*#__PURE__*/React.createElement(Link, {\n    to: `/chat-details/${chat._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"Chat Details\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: `/post-form/${chat._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"Create Post\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Posts\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, chat.posts.length > 0 ? chat.posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile bg-light\",\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/post/${chat._id}/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, post.title))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, post.text))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, \"No posts\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \"Loading...\");\n};\n/*\nconst Chat = ({\n  getChatById,\n  profile: { chat },\n  //chats: { chat, loading }, \n  match }) => {\n  useEffect(() => {\n    getChatById(match.params.id);\n  }, [getChatById]);\n  return (\n    <Fragment>\n      <h1>{chat}</h1>\n    </Fragment>\n  )\n}\n\n*/\n\n\nChat.propTypes = {\n  getChatById: PropTypes.func.isRequired,\n  chat: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getChatById\n})(Chat);\n/*\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nconst Chat = props => {\n  const chatId = useParams();\n  return <Fragment>\n    {chatId}\n  </Fragment>\n};\n\nChat.propTypes = {};\n\nexport default Chat;\n\n\n/*\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentChat } from '../../actions/profile';\nimport Posts from './Posts';\n\nconst Chat = ({ chat }) => {\n  return loading && chat === null ? <div>Loading...</div> : <Fragment>\n  <h1 className=\"large text-primary\">\n    {chat.title}\n  </h1>\n  <Link to=\"#!\">Chat details</Link>\n  {chat !== null ? (\n    <Fragment>\n      <Posts post={chat.posts} />\n    </Fragment>) :\n    (\n      <Fragment>\n        <Link to=\"/create-post\">Create New Post</Link>\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>\n              Posts:\n            </h2>\n            <p>There are no posts</p>\n          </div>\n        </div>\n      </Fragment>\n    )}\n};\n\n\nChat.propTypes = {\n  getCurrentChat: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat\n});\n\nexport default connect(mapStateToProps, { getCurrentChat })(Chat);\n\n\n  */\n\n/*\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Chat = ({ chat }) => {\nconst posts = chat.map(post => (\n  <div key={post._id} class=\"profile bg-light\">\n    <div>\n      <h2><Link to=\"post.html\">{post.title}</Link></h2>\n    </div>\n    <div>\n      {post.text}\n    </div>\n  </div>\n));\nreturn (\n  <Fragment>\n    <h1 className=\"large text-primary\">\n      {chat.title}\n    </h1>\n    <Link to=\"/chat-details\">Chat Details</Link>\n    <p className=\"lead\">\n      Posts\n    </p>\n    <Link to=\"create_post.html\">Create new post</Link>\n    <div class=\"posts\">\n      {posts}\n    </div>\n  </Fragment>\n)\n};\n\nChat.propTypes = {\nchat: PropTypes.object.isRequired\n};\n\nexport default Chat;\n*/","map":{"version":3,"sources":["/Users/jackgoler/Desktop/quadstr/client/src/components/profile/Chat.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","getChatById","Chat","profile","chat","match","params","id","title","_id","posts","length","map","post","text","propTypes","func","isRequired","array","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getChatById } from '../../actions/profile';\n\nconst Chat = ({\n  getChatById,\n  profile: { chat },\n  //chats: { chat, loading },\n  match }) => {\n  useEffect(() => {\n    getChatById(match.params.id)\n  }, [getChatById, match.params.id])\n\n  return chat ? <Fragment>\n    <h1 className=\"large text-primary\">{`${chat.title} quad`}</h1>\n    <p className=\"lead\">Welcome to {chat.title}</p>\n    <Link to={`/chat-details/${chat._id}`}>Chat Details</Link>\n    <br />\n    <Link to={`/post-form/${chat._id}`}>Create Post</Link>\n    <p className=\"lead\">\n      Posts\n    </p>\n    <div className=\"posts\">\n      {chat.posts.length > 0 ? chat.posts.map(post => (\n        <div className=\"profile bg-light\" key={post._id}>\n          <div>\n            <h2><Link to={`/post/${chat._id}/${post._id}`}>{post.title}</Link></h2>\n          </div>\n          <div>\n            {post.text}\n          </div>\n        </div>\n      )) : <h4>No posts</h4>}\n    </div>\n\n  </Fragment> : <p>Loading...</p>\n}\n\n/*\nconst Chat = ({\n  getChatById,\n  profile: { chat },\n  //chats: { chat, loading }, \n  match }) => {\n  useEffect(() => {\n    getChatById(match.params.id);\n  }, [getChatById]);\n  return (\n    <Fragment>\n      <h1>{chat}</h1>\n    </Fragment>\n  )\n}\n\n*/\nChat.propTypes = {\n  getChatById: PropTypes.func.isRequired,\n  chat: PropTypes.array\n\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getChatById })(Chat);\n\n\n/*\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nconst Chat = props => {\n  const chatId = useParams();\n  return <Fragment>\n    {chatId}\n  </Fragment>\n};\n\nChat.propTypes = {};\n\nexport default Chat;\n\n\n/*\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentChat } from '../../actions/profile';\nimport Posts from './Posts';\n\nconst Chat = ({ chat }) => {\n  return loading && chat === null ? <div>Loading...</div> : <Fragment>\n  <h1 className=\"large text-primary\">\n    {chat.title}\n  </h1>\n  <Link to=\"#!\">Chat details</Link>\n  {chat !== null ? (\n    <Fragment>\n      <Posts post={chat.posts} />\n    </Fragment>) :\n    (\n      <Fragment>\n        <Link to=\"/create-post\">Create New Post</Link>\n        <div className=\"profile bg-light\">\n          <div>\n            <h2>\n              Posts:\n            </h2>\n            <p>There are no posts</p>\n          </div>\n        </div>\n      </Fragment>\n    )}\n};\n\n\nChat.propTypes = {\n  getCurrentChat: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  chat: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  chat: state.chat\n});\n\nexport default connect(mapStateToProps, { getCurrentChat })(Chat);\n\n\n  */\n\n/*\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nconst Chat = ({ chat }) => {\nconst posts = chat.map(post => (\n  <div key={post._id} class=\"profile bg-light\">\n    <div>\n      <h2><Link to=\"post.html\">{post.title}</Link></h2>\n    </div>\n    <div>\n      {post.text}\n    </div>\n  </div>\n));\nreturn (\n  <Fragment>\n    <h1 className=\"large text-primary\">\n      {chat.title}\n    </h1>\n    <Link to=\"/chat-details\">Chat Details</Link>\n    <p className=\"lead\">\n      Posts\n    </p>\n    <Link to=\"create_post.html\">Create new post</Link>\n    <div class=\"posts\">\n      {posts}\n    </div>\n  </Fragment>\n)\n};\n\nChat.propTypes = {\nchat: PropTypes.object.isRequired\n};\n\nexport default Chat;\n*/\n"]},"metadata":{},"sourceType":"module"}