{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/Desktop/quadstr_2.0/client/src/components/chat-form/CreateChat.js\";\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createChat } from '../../actions/chat';\nimport { setAlert } from '../../actions/alert';\n\nconst CreateChat = ({\n  setAlert,\n  createChat,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    password: '',\n    password2: ''\n  });\n  const {\n    title,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      //isCompleted = true;\n      createChat({\n        title,\n        password\n      }, history);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Create New Chat\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Fill Out Form Below\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"dashboard.html\",\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Chat Name\",\n    name: \"title\",\n    value: title,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Chat Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    value: password2,\n    onChange: e => onChange(e),\n    placeholder: \"Confirm Password\",\n    required: true,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Create\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))));\n};\n\nCreateChat.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  createChat: PropTypes.func.isRequired,\n  isCompleted: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isCompleted: state.auth.isCompleted\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  createChat\n})(CreateChat);","map":{"version":3,"sources":["/Users/jackgoler/Desktop/quadstr_2.0/client/src/components/chat-form/CreateChat.js"],"names":["React","Fragment","useState","PropTypes","connect","createChat","setAlert","CreateChat","history","formData","setFormData","title","password","password2","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","isCompleted","bool","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,QAAT,QAAyB,qBAAzB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYD,EAAAA,UAAZ;AAAwBG,EAAAA;AAAxB,CAAD,KAAuC;AACxD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AACvCS,IAAAA,KAAK,EAAE,EADgC;AAEvCC,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,SAAS,EAAE;AAH4B,GAAD,CAAxC;AAMA,QAAM;AACJF,IAAAA,KADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA;AAHI,MAIFJ,QAJJ;;AAMA,QAAMK,QAAQ,GAAGC,CAAC,IAAIL,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACM,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CAAjC;;AAEA,QAAMC,QAAQ,GAAGJ,CAAC,IAAI;AACpBA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAIR,QAAQ,KAAKC,SAAjB,EAA4B;AAC1BP,MAAAA,QAAQ,CAAC,wBAAD,EAA2B,QAA3B,CAAR;AACD,KAFD,MAEO;AACL;AACAD,MAAAA,UAAU,CAAC;AAAEM,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,EAAsBJ,OAAtB,CAAV;AACD;AACF,GARD;;AAWA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,eAOE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,QAAQ,EAAEO,CAAC,IAAII,QAAQ,CAACJ,CAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,MAAM,EAAC,gBAAb;AAA8B,IAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,WAA/B;AAA2C,IAAA,IAAI,EAAC,OAAhD;AAAwD,IAAA,KAAK,EAAEJ,KAA/D;AAAsE,IAAA,QAAQ,EAAEI,CAAC,IAAID,QAAQ,CAACC,CAAD,CAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,eAAnC;AAAmD,IAAA,IAAI,EAAC,UAAxD;AAAmE,IAAA,KAAK,EAAEH,QAA1E;AAAoF,IAAA,QAAQ,EAAEG,CAAC,IAAID,QAAQ,CAACC,CAAD,CAA3G;AACE,IAAA,SAAS,EAAC,GADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eASE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,KAAK,EAAEF,SAFT;AAGE,IAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAD,CAHzB;AAIE,IAAA,WAAW,EAAC,kBAJd;AAKE,IAAA,QAAQ,MALV;AAKW,IAAA,SAAS,EAAC,GALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,eAkBE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAoC,IAAA,SAAS,EAAC,iBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBF,CADF,CAPF,CADF;AAgCD,CA1DD;;AA4DAR,UAAU,CAACc,SAAX,GAAuB;AACrBf,EAAAA,QAAQ,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UADJ;AAErBlB,EAAAA,UAAU,EAAEF,SAAS,CAACmB,IAAV,CAAeC,UAFN;AAGrBC,EAAAA,WAAW,EAAErB,SAAS,CAACsB;AAHF,CAAvB;;AAMA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCH,EAAAA,WAAW,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AADQ,CAAL,CAA7B;;AAMA,eAAepB,OAAO,CACpBsB,eADoB,EAEpB;AAAEpB,EAAAA,QAAF;AAAYD,EAAAA;AAAZ,CAFoB,CAAP,CAGbE,UAHa,CAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createChat } from '../../actions/chat';\nimport { setAlert } from '../../actions/alert';\n\nconst CreateChat = ({ setAlert, createChat, history }) => {\n  const [formData, setFormData] = useState({\n    title: '',\n    password: '',\n    password2: ''\n  });\n\n  const {\n    title,\n    password,\n    password2\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      //isCompleted = true;\n      createChat({ title, password }, history);\n    }\n  }\n\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Create New Chat\n    </h1>\n      <p className=\"lead\">\n        Fill Out Form Below\n    </p>\n      <div className=\"form\" onSubmit={e => onSubmit(e)}>\n        <form action=\"dashboard.html\" className=\"form\">\n          <div className=\"form-group\">\n            <input type=\"text\" placeholder=\"Chat Name\" name='title' value={title} onChange={e => onChange(e)} />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"password\" placeholder=\"Chat Password\" name='password' value={password} onChange={e => onChange(e)}\n              minLength=\"6\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"password\"\n              name='password2'\n              value={password2}\n              onChange={e => onChange(e)}\n              placeholder=\"Confirm Password\"\n              required minLength=\"6\"\n            />\n          </div>\n          <input type=\"submit\" value=\"Create\" className=\"btn btn-primary\" />\n        </form>\n      </div>\n    </Fragment>\n  )\n};\n\nCreateChat.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  createChat: PropTypes.func.isRequired,\n  isCompleted: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isCompleted: state.auth.isCompleted\n});\n\n\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, createChat }\n)(CreateChat);"]},"metadata":{},"sourceType":"module"}