{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/quadstr-2.0/client/src/components/auth/Login.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({\n  login,\n  isAuthenticated\n}) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  }; // Redirect if logged in\n\n\n  if (isAuthenticated) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, \"Sign Into Your Account\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => onSubmit(e),\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email Address\",\n    name: \"email\",\n    value: email,\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: password,\n    onChange: e => onChange(e),\n    required: true,\n    minLength: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, \"Don't have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 30\n    }\n  }, \"Sign Up\")));\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n  login\n})(Login);","map":{"version":3,"sources":["/Users/jackgoler/quadstr-2.0/client/src/components/auth/Login.js"],"names":["React","Fragment","useState","Link","Redirect","connect","PropTypes","login","Login","isAuthenticated","formData","setFormData","email","password","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","bool","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    login(email, password);\n  };\n\n  // Redirect if logged in\n  if (isAuthenticated) {\n    return <Redirect to=\"/profile\" />\n  }\n\n  return <Fragment>\n    <h1 className=\"large text-primary\">Sign In</h1>\n    <p className=\"lead\">Sign Into Your Account</p>\n    <form onSubmit={e => onSubmit(e)} className=\"form\">\n      <div className=\"form-group\">\n        <input type=\"email\" placeholder=\"Email Address\" name='email' value={email} onChange={e => onChange(e)} required />\n      </div>\n      <div className=\"form-group\">\n        <input type=\"password\" placeholder=\"Password\" name='password' value={password} onChange={e => onChange(e)} required minLength=\"6\" />\n      </div>\n      <input type=\"submit\" value=\"Login\" className=\"btn btn-primary\" />\n    </form>\n    <p className=\"my-1\">\n      Don't have an account? <Link to=\"/register\">Sign Up</Link>\n    </p>\n  </Fragment>\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);"]},"metadata":{},"sourceType":"module"}