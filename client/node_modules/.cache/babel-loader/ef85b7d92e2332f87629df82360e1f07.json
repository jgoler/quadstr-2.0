{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/Desktop/quadstr_2.0/client/src/components/chat-form/JoinChat.js\";\n\n/*\nimport React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { joinChat } from '../../actions/chat';\nimport { setAlert } from '../../actions/alert';\n\nconst JoinChat = ({ joinChat, history }) => {\n  const [formData, setFormData] = useState({\n    code: '',\n    password: ''\n  });\n\n  const {\n    code,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    joinChat(formData, history);\n    //setAlert('Chat joined', 'success');\n  }\n\n  /*\n  if (isCompleted) {\n    return <Redirect to='/profile' />\n  }\n  */\n\n/*\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Join a Chat\n      </h1>\n      <p className=\"lead\">\n        Fill Out Form Below\n      </p>\n      <div className=\"form\" onSubmit={e => onSubmit(e)}>\n        <form action=\"dashboard.html\" className=\"form\"  >\n          <div className=\"form-group\">\n            <input type=\"text\" placeholder=\"Chat Code\" name='code' value={code} required onChange={e => onChange(e)} />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"password\" placeholder=\"Chat Password\" name='password' value={password} required minLength=\"6\" onChange={e => onChange(e)} />\n          </div>\n          <input type=\"submit\" value=\"Join\" className=\"btn btn-primary\" />\n        </form>\n      </div>\n    </Fragment>\n  )\n};\n\nJoinChat.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  joinChat: PropTypes.func.isRequired,\n  isCompleted: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isCompleted: state.auth.isCompleted\n});\n\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, joinChat }\n)(JoinChat);\n\n*/\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { joinChat } from '../../actions/chat';\n\nconst JoinChat = ({\n  joinChat,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    code: '',\n    password: ''\n  });\n  const {\n    code,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Join a Chat\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, \"Fill Out Form Below\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    onSubmit: e => {\n      e.preventDefault();\n      joinChat(formData, history);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    action: \"dashboard.html\",\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Chat Code\",\n    name: \"code\",\n    value: code,\n    required: true,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Chat Password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    minLength: \"6\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Join\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))));\n};\n\nJoinChat.propTypes = {\n  joinChat: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  joinChat\n})(JoinChat);","map":{"version":3,"sources":["/Users/jackgoler/Desktop/quadstr_2.0/client/src/components/chat-form/JoinChat.js"],"names":["React","Fragment","useState","PropTypes","connect","joinChat","JoinChat","history","formData","setFormData","code","password","onChange","e","target","name","value","preventDefault","propTypes","func","isRequired"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAED,EAAAA,QAAF;AAAYE,EAAAA;AAAZ,CAAD,KAA2B;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AACvCQ,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;AAKA,QAAM;AACJD,IAAAA,IADI;AAEJC,IAAAA;AAFI,MAGFH,QAHJ;;AAKA,QAAMI,QAAQ,GAAGC,CAAC,IAAIJ,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,KAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,GAAD,CAAjC;;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,eAOE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,QAAQ,EAAEH,CAAC,IAAI;AACnCA,MAAAA,CAAC,CAACI,cAAF;AACAZ,MAAAA,QAAQ,CAACG,QAAD,EAAWD,OAAX,CAAR;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAM,IAAA,MAAM,EAAC,gBAAb;AAA8B,IAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,WAA/B;AAA2C,IAAA,IAAI,EAAC,MAAhD;AAAuD,IAAA,KAAK,EAAEG,IAA9D;AAAoE,IAAA,QAAQ,MAA5E;AAA6E,IAAA,QAAQ,EAAEE,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,eAAnC;AAAmD,IAAA,IAAI,EAAC,UAAxD;AAAmE,IAAA,KAAK,EAAED,QAA1E;AAAoF,IAAA,QAAQ,MAA5F;AAA6F,IAAA,SAAS,EAAC,GAAvG;AAA2G,IAAA,QAAQ,EAAEC,QAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,MAA3B;AAAkC,IAAA,SAAS,EAAC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAJF,CAPF,CADF;AAwBD,CArCD;;AAuCAN,QAAQ,CAACY,SAAT,GAAqB;AACnBb,EAAAA,QAAQ,EAAEF,SAAS,CAACgB,IAAV,CAAeC;AADN,CAArB;AAIA,eAAehB,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA4BC,QAA5B,CAAf","sourcesContent":["/*\nimport React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { joinChat } from '../../actions/chat';\nimport { setAlert } from '../../actions/alert';\n\nconst JoinChat = ({ joinChat, history }) => {\n  const [formData, setFormData] = useState({\n    code: '',\n    password: ''\n  });\n\n  const {\n    code,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    joinChat(formData, history);\n    //setAlert('Chat joined', 'success');\n  }\n\n  /*\n  if (isCompleted) {\n    return <Redirect to='/profile' />\n  }\n  */\n/*\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Join a Chat\n      </h1>\n      <p className=\"lead\">\n        Fill Out Form Below\n      </p>\n      <div className=\"form\" onSubmit={e => onSubmit(e)}>\n        <form action=\"dashboard.html\" className=\"form\"  >\n          <div className=\"form-group\">\n            <input type=\"text\" placeholder=\"Chat Code\" name='code' value={code} required onChange={e => onChange(e)} />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"password\" placeholder=\"Chat Password\" name='password' value={password} required minLength=\"6\" onChange={e => onChange(e)} />\n          </div>\n          <input type=\"submit\" value=\"Join\" className=\"btn btn-primary\" />\n        </form>\n      </div>\n    </Fragment>\n  )\n};\n\nJoinChat.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  joinChat: PropTypes.func.isRequired,\n  isCompleted: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isCompleted: state.auth.isCompleted\n});\n\n\nexport default connect(\n  mapStateToProps,\n  { setAlert, joinChat }\n)(JoinChat);\n\n*/\nimport React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { joinChat } from '../../actions/chat';\n\n\nconst JoinChat = ({ joinChat, history }) => {\n  const [formData, setFormData] = useState({\n    code: '',\n    password: ''\n  });\n\n  const {\n    code,\n    password\n  } = formData;\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">\n        Join a Chat\n      </h1>\n      <p className=\"lead\">\n        Fill Out Form Below\n      </p>\n      <div className=\"form\" onSubmit={e => {\n        e.preventDefault();\n        joinChat(formData, history);\n      }}>\n        <form action=\"dashboard.html\" className=\"form\"  >\n          <div className=\"form-group\">\n            <input type=\"text\" placeholder=\"Chat Code\" name='code' value={code} required onChange={onChange} />\n          </div>\n          <div className=\"form-group\">\n            <input type=\"password\" placeholder=\"Chat Password\" name='password' value={password} required minLength=\"6\" onChange={onChange} />\n          </div>\n          <input type=\"submit\" value=\"Join\" className=\"btn btn-primary\" />\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nJoinChat.propTypes = {\n  joinChat: PropTypes.func.isRequired\n};\n\nexport default connect(null, { joinChat })(JoinChat);"]},"metadata":{},"sourceType":"module"}