{"ast":null,"code":"var _jsxFileName = \"/Users/jackgoler/Desktop/quadstr_2.0/client/src/components/profile/Chat.js\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getChatById } from '../../actions/profile';\nimport { addPost } from '../../actions/chat';\n\nconst Chat = ({\n  getChatById,\n  addPost,\n  profile: {\n    chat\n  },\n  //chats: { chat, loading },\n  match\n}) => {\n  useEffect(() => {\n    getChatById(match.params.id);\n  }, [getChatById, match.params.id]);\n  const [formData, setFormData] = useState({\n    title: '',\n    text: ''\n  });\n  const {\n    title,\n    text\n  } = formData;\n  const [isClicked, setClicked] = useState({\n    clicked: false\n  });\n  const {\n    clicked\n  } = isClicked;\n\n  const changed = e => setClicked({\n    clicked: true\n  });\n\n  let allQuadMembers = \"\";\n  let partialQuadMembers = \"\";\n\n  const onChange = e => setFormData({ ...formData,\n    [e.target.name]: e.target.value\n  }); //console.log(clicked);\n  //console.log(`Not clicked is equal to ${!clicked} `);\n\n\n  return chat ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, chat.users.map((user, index) => {\n    if (chat.users.length === index + 1) {\n      allQuadMembers += ` ${user.name}`;\n    } else {\n      allQuadMembers += ` ${user.name},`;\n    }\n  }), chat.users.map((user, index) => {\n    if (chat.users.length === index + 1 && index < 3) {\n      partialQuadMembers += ` ${user.name}`;\n    } else if (index < 3) {\n      partialQuadMembers += ` ${user.name},`;\n    } else {\n      partialQuadMembers += \"\";\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, `${chat.title} quad`), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, \"Welcome to \", chat.title), chat.users.length > 3 && !clicked ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#17a2b8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 10\n    }\n  }, \"Members:\"), \" \", partialQuadMembers, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    onClick: changed,\n    style: {\n      color: \"#17a2b8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 82\n    }\n  }, \"and \", chat.users.length - 3, \" others\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 183\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#17a2b8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 186\n    }\n  }, \"Members:\"), \" \", allQuadMembers), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post-form-header bg-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Start a Discussion\")), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form my-1\",\n    onSubmit: e => {\n      e.preventDefault();\n      addPost(match.params.id, {\n        title,\n        text\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"title\",\n    cols: \"30\",\n    rows: \"2\",\n    placeholder: \"Create discussion title\",\n    value: title,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Discussion text\",\n    name: \"text\",\n    value: text,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn btn-dark my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Discussions\"), chat.posts.length > 0 ? chat.posts.map(post => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile bg-light\",\n    key: post._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/post/${chat._id}/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, post.title))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, post.text), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#17a2b8\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, `${post.comments.length} comment(s)`)))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }\n  }, \"No posts\"))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 18\n    }\n  }, \"Loading...\");\n};\n/*\nconst Chat = ({\n  getChatById,\n  profile: { chat },\n  //chats: { chat, loading }, \n  match }) => {\n  useEffect(() => {\n    getChatById(match.params.id);\n  }, [getChatById]);\n  return (\n    <Fragment>\n      <h1>{chat}</h1>\n    </Fragment>\n  )\n}\n*/\n\n\nChat.propTypes = {\n  getChatById: PropTypes.func.isRequired,\n  addPost: PropTypes.func.isRequired,\n  chat: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getChatById,\n  addPost\n})(Chat);","map":{"version":3,"sources":["/Users/jackgoler/Desktop/quadstr_2.0/client/src/components/profile/Chat.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","Link","getChatById","addPost","Chat","profile","chat","match","params","id","formData","setFormData","title","text","isClicked","setClicked","clicked","changed","e","allQuadMembers","partialQuadMembers","onChange","target","name","value","users","map","user","index","length","color","preventDefault","posts","post","_id","comments","propTypes","func","isRequired","array","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getChatById } from '../../actions/profile';\nimport { addPost } from '../../actions/chat';\n\nconst Chat = ({\n  getChatById,\n  addPost,\n  profile: { chat },\n  //chats: { chat, loading },\n  match }) => {\n  useEffect(() => {\n    getChatById(match.params.id)\n  }, [getChatById, match.params.id]);\n\n  const [formData, setFormData] = useState({\n    title: '',\n    text: ''\n  });\n\n\n\n  const {\n    title,\n    text\n  } = formData;\n\n  const [isClicked, setClicked] = useState({\n    clicked: false\n  });\n\n  const { clicked } = isClicked;\n\n  const changed = e => setClicked({ clicked: true });\n\n  let allQuadMembers = \"\";\n  let partialQuadMembers = \"\";\n\n  const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  //console.log(clicked);\n  //console.log(`Not clicked is equal to ${!clicked} `);\n\n  return chat ? <Fragment>\n    {\n      chat.users.map((user, index) => {\n        if (chat.users.length === index + 1) {\n          allQuadMembers += ` ${user.name}`\n        } else {\n          allQuadMembers += ` ${user.name},`\n        }\n\n      })\n    }\n    {\n      chat.users.map((user, index) => {\n        if (chat.users.length === index + 1 && index < 3) {\n          partialQuadMembers += ` ${user.name}`\n        } else if (index < 3) {\n          partialQuadMembers += ` ${user.name},`\n        } else {\n          partialQuadMembers += \"\"\n        }\n      })\n    }\n    <h1 className=\"large text-primary\">{`${chat.title} quad`}</h1>\n    <p className=\"lead\">Welcome to {chat.title}</p>\n    {chat.users.length > 3 && !clicked ?\n      <p><span style={{ color: \"#17a2b8\" }}>Members:</span> {partialQuadMembers} <span onClick={changed} style={{ color: \"#17a2b8\" }}>and {chat.users.length - 3} others</span></p> : <p><span style={{ color: \"#17a2b8\" }}>Members:</span> {allQuadMembers}</p>}\n\n    <br />\n    <div className=\"post-form\">\n      <div className=\"post-form-header bg-primary\">\n        <h3>Start a Discussion</h3>\n      </div>\n      <form className=\"form my-1\" onSubmit={e => {\n        e.preventDefault();\n        addPost(match.params.id, { title, text });\n      }}\n      >\n        <textarea\n          name='title'\n          cols=\"30\"\n          rows=\"2\"\n          placeholder=\"Create discussion title\"\n          value={title}\n          onChange={e => onChange(e)}\n        />\n        <textarea\n          cols=\"30\"\n          rows=\"5\" placeholder=\"Discussion text\"\n          name='text'\n          value={text}\n          onChange={e => onChange(e)}\n        />\n        <input type=\"submit\" value=\"Submit\" className=\"btn btn-dark my-1\" />\n      </form>\n    </div>\n    <div className=\"posts\">\n      <p className=\"lead\">\n        Discussions\n      </p>\n      {chat.posts.length > 0 ? chat.posts.map(post => (\n        <div className=\"profile bg-light\" key={post._id}>\n          <div>\n            <h2><Link to={`/post/${chat._id}/${post._id}`}>{post.title}</Link></h2>\n          </div>\n          <div>\n            {post.text}\n          </div>\n          <div>\n            <span style={{ color: \"#17a2b8\" }}>\n              {`${post.comments.length} comment(s)`}\n            </span>\n          </div>\n\n        </div>\n      )) : <h4>No posts</h4>}\n    </div>\n\n  </Fragment > : <p>Loading...</p>\n}\n\n/*\nconst Chat = ({\n  getChatById,\n  profile: { chat },\n  //chats: { chat, loading }, \n  match }) => {\n  useEffect(() => {\n    getChatById(match.params.id);\n  }, [getChatById]);\n  return (\n    <Fragment>\n      <h1>{chat}</h1>\n    </Fragment>\n  )\n}\n*/\nChat.propTypes = {\n  getChatById: PropTypes.func.isRequired,\n  addPost: PropTypes.func.isRequired,\n  chat: PropTypes.array\n\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getChatById, addPost })(Chat);\n"]},"metadata":{},"sourceType":"module"}